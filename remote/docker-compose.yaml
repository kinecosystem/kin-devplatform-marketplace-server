version: "3"

services:

  marketplace-server:
    image: kinecosystem/marketplace-server:${MARKETPLACE_COMMIT}
    ports:
      - 80:3000
    links:
      - redis
      - payment-service
      - postgres
    environment:
      &app_env_vars
      APP_DEBUG: 'True'
      APP_PORT: 3000
      APP_HOST: '0.0.0.0'
      APP_NAME: 'marketplace-server'
      APP_REDIS: redis://redis:6379/0
      APP_PAYMENT_SERVICE: http://payment-service:3000
      APP_PAYMENT_COMPLETE_CALLBACK: http://marketplace-internal:3000/v1/internal/payments
      APP_DB_TYPE: postgres
      APP_DB_USERNAME: user
      APP_DB_PASSWORD: pass
      APP_DB_PORT: 5432 
      APP_DB_HOST: postgres
      APP_DB_DATABASE: ecosystem

  marketplace-internal:
    image: kinecosystem/marketplace-server:${MARKETPLACE_COMMIT}
    command: npm run start-internal
    ports:
      - 3000
    links:
      - redis
      - payment-service
      - postgres
    environment:
      <<: *app_env_vars
      APP_NAME: 'marketplace-internal'

  postgres:
    image: postgres:10.4
    ports:
      - 5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: ecosystem

  payment-service:
    image: kinecosystem/payment-service:${PAYMENT_SERVICE}
    ports:
      - 3000
    links:
      - redis
    environment:
      &payment_env_vars
      APP_DEBUG: 'False'
      APP_PORT: 3000
      APP_HOST: '0.0.0.0'
      APP_NAME: 'payment-service'
      APP_REDIS: redis://redis:6379/0
      STELLAR_CHANNEL_SEEDS: ${STELLAR_CHANNEL_SEEDS}
      STELLAR_BASE_SEED: ${STELLAR_BASE_SEED}
      STELLAR_ADDRESS: ${STELLAR_ADDRESS}
      STELLAR_HORIZON_URL: 'https://stellar.kinplayground.com'
      STELLAR_NETWORK: ${BLOCKCHAIN_PASSPHRASE}
      STELLAR_KIN_ISSUER_ADDRESS: 'GDVIWJ2NYBCPHMGTIBO5BBZCP5QCYC4YT4VINTV5PZOSE7BAJCH5JI64'
      STELLAR_KIN_TOKEN_NAME: 'KIN'
      STELLAR_INITIAL_XLM_AMOUNT: 2


  payment-worker:
    image: kinecosystem/payment-service:${PAYMENT_SERVICE}
    command: pipenv run rq worker --url redis://redis:6379/0
    links:
      - redis
    environment:
      <<: *payment_env_vars

  payment-watcher:
    image: kinecosystem/payment-service:29016f6
    command: pipenv run python watcher.py
    links:
      - redis
    environment:
      <<: *payment_env_vars

  redis:
    image: redis:4.0
    ports:
      - 6379

  psql:
    image: postgres:10.4
    links:
      - postgres
    entrypoint: psql -h postgres -U user -d ecosystem
    environment:
      PGPASSWORD: pass

  create-db:
    image: kinecosystem/marketplace-server:${MARKETPLACE_COMMIT}
    links:
      - postgres
    command: npm run create-db
    environment:
      APP_DB_TYPE: postgres
      APP_DB_USERNAME: user
      APP_DB_PASSWORD: pass
      APP_DB_PORT: 5432
      APP_DB_HOST: postgres
      APP_DB_DATABASE: ecosystem
      STELLAR_ADDRESS: ${STELLAR_ADDRESS}
      REDUCE_AMOUNT: 'true'

